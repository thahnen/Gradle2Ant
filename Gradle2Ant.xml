<?xml version="1.0" encoding="UTF-8" ?>
<project name="Gradle2Ant">
    <description>
        Call Gradle from Ant - Using Gradle Java plugin directly!
    </description>

    <!-- General properties! -->
    <dirname property="current.dir" file="${ant.file}" />


    <!-- General macro for running Gradle using Ant <exec> macro! -->
    <macrodef name="gradle" description="Gradle task executioner">
        <attribute name="task" />
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <exec executable="cmd" dir="@{dir}" failonerror="true">
                <arg line="/C @{wrapper} @{project}:@{task} @{args}" />
            </exec>
        </sequential>
    </macrodef>


    <!-- Gradle task "classes" to compile classes -->
    <macrodef name="gradle.classes" description="Gradle task 'classes'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="classes"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>

    <!-- Gradle task "jar" to create JAR archive -->
    <macrodef name="gradle.jar" description="Gradle task 'jar'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="jar"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>

    <!-- Gradle task "fatJar" to create fat JAR archive -->
    <macrodef name="gradle.fatJar" description="Gradle task 'fatJar'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="fatJar"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>

    <!-- Gradle task "testClasses" to compile test classes -->
    <macrodef name="gradle.testClasses" description="Gradle task 'testClasses'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="testClasses"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>

    <!-- Gradle task "test" to run test classes -->
    <macrodef name="gradle.test" description="Gradle task 'test'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="test"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>


    <!-- Gradle task "clean" to clean workspace -->
    <macrodef name="gradle.clean" description="Gradle task 'clean'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="clean"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>

    <!-- Gradle task "javadoc" to create Java documentation -->
    <macrodef name="gradle.javadoc" description="Gradle task 'javadoc'">
        <attribute name="project"   default="" />
        <attribute name="args"      default="" />
        <attribute name="wrapper"   default="gradle" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <gradle task="javadoc"
                    project="@{project}"
                    args="@{args}"
                    wrapper="@{wrapper}"
                    dir="@{dir}" />
        </sequential>
    </macrodef>


    <!-- Macro to add the Gradle wrapper verion as property to the current script -->
    <macrodef name="gradlew.version" description="Load Gradle wrapper version">
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <loadproperties srcfile="@{dir}/gradle/gradle-wrapper.properties" />
            <script language="javascript"><![CDATA[
                project.setProperty(
                    'gradle.version',
                    project.getProperty('distributionURL').split('gradle-')[1].split['-bin'][0]
                )
            ]]></script>
        </sequential>
    </macrodef>


    <!-- Macro to run Gradlew Wrapper from command line with non restricting arguments -->
    <macrodef name="gradlew.cmd" description="Run Gradle Wrapper from command line">
        <attribute name="args"      default="" />
        <attribute name="dir"       default="${current.dir}" />

        <sequential>
            <exec executable="cmd" dir="@{dir}" failonerror="true">
                <arg line="/C gradlew.bat @{args}" />
            </exec>
        </sequential>
    </macrodef>


    <!-- Macro to get the generated JAR archive file name -->
    <scriptdef name="vGradleJarName" language="javascript" description="">
        <attribute name="folder" />
        <![CDATA[
            var files = (new java.io.File(attributes.get("folder"))).listFiles();
            var fileName = ""
            for (i = 0; i < files.length; i++) {
                fileName = files[i].getName();
                if (fileName.indexOf(project.name) !== -1 && fileName.indexOf(".jar") !== -1
                    && fileName.indexOf("-fat") === -1) {
                    project.setProperty("gradle.jar.name", fileName);
                    break;
                }
            }
        ]]>
    </scriptdef>

    <!-- Macro to get the generated fat JAR archive file name -->
    <scriptdef name="vGradleFatJarName" language="javascript" description="">
        <attribute name="folder" />
        <![CDATA[
            var files = (new java.io.File(attributes.get("folder"))).listFiles();
            for (i = 0; i < files.length; i++) {
                var fn = files[i].getName();
                if (fn.indexOf(project.name) !== -1 && fn.indexOf(".jar") !== -1
                    && fn.indexOf("-fat") !== -1) {
                    project.setProperty("gradle.fatJar.name", fn);
                    break;
                }
            }
        ]]>
    </scriptdef>


    <!-- Target to kill all (zombie) Gradle processes (dont fail on error as WMIC isn't stable) -->
    <target name="gradle.kill" description="Kill all (zombie) Gradle processes">
        <exec executable="wmic.exe" failonerror="false">
            <arg line="PROCESS WHERE &quot;commandline like &apos;%%org.gradle%%&apos;&quot; CALL Terminate" />
        </exec>
    </target>
</project>
